@model PedagogyWorld.Unit

<div class="editor-label">
    @Html.LabelFor(model => model.UnitName)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.UnitName)
    @Html.ValidationMessageFor(model => model.UnitName)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
   Grade
</div>
<div class="editor-field">
   @Html.DropDownListFor(model => model.Grade_Id, ((IEnumerable<PedagogyWorld.Grade>)ViewBag.PossibleGrades).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.GradeName), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.Grade_Id)
    }), "Choose...")
   @Html.ValidationMessageFor(model => model.Grade_Id)
</div>

<div class="editor-label">
   Subject
</div>
<div class="editor-field">
   @Html.DropDownListFor(model => model.Subject_Id, ((IEnumerable<PedagogyWorld.Subject>)ViewBag.PossibleSubjects).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.SubjectName), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.Subject_Id)
    }), "Choose...")
   @Html.ValidationMessageFor(model => model.Subject_Id)
</div>

